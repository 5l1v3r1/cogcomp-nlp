package edu.illinois.cs.cogcomp.comma.lbj;
import edu.illinois.cs.cogcomp.comma.Comma;
import edu.illinois.cs.cogcomp.comma.CommaReader;
import edu.illinois.cs.cogcomp.edison.sentences.Constituent;
import edu.illinois.cs.cogcomp.edison.sentences.ViewNames;
import edu.illinois.cs.cogcomp.edison.sentences.Relation;
import edu.illinois.cs.cogcomp.edison.sentences.PredicateArgumentView;
import java.util.List;
import java.util.ArrayList;

discrete% UnigramLeftFeature(Comma c) <- {
    sense c.getWordToLeft(1);
}

discrete% UnigramSecondLeftFeature(Comma c) <- {
	sense c.getWordToLeft(2);
}

discrete% BigramLeftFeature(Comma c) <- {
    sense c.getWordToLeft(2) + "-" + c.getWordToLeft(1);
}

discrete% UnigramRightFeature(Comma c) <- {
    sense c.getWordToRight(1);
}

discrete% UnigramSecondRightFeature(Comma c) <- {
	sense c.getWordToRight(2);
}



discrete% UnigramLeftPOSFeature(Comma c) <- {
    sense c.getPOSToLeft(1);
}

discrete% UnigramSecondLeftPOSFeature(Comma c) <- {
    sense c.getPOSToLeft(2);
}

discrete% UnigramRightPOSFeature(Comma c) <- {
    sense c.getPOSToRight(1);
}

discrete% UnigramSecondRightPOSFeature(Comma c) <- {
    sense c.getPOSToRight(2);
}



discrete% UnigramLeftChunkFeature(Comma c) <- {
    sense Comma.getNotation(c.getChunkToLeftOfComma(1), true, false);
}

discrete% UnigramSecondLeftChunkFeature(Comma c) <- {
  sense Comma.getNotation(c.getChunkToLeftOfComma(2), true, false);
}

discrete% UnigramRightChunkFeature(Comma c) <- {
    sense Comma.getNotation(c.getChunkToRightOfComma(1), true, false);
}

discrete% UnigramSecondRightChunkFeature(Comma c) <- {
  sense Comma.getNotation(c.getChunkToRightOfComma(2), true, false);
}



discrete% UnigramLeftPhraseFeature(Comma c) <- {
    sense Comma.getNotation(c.getPhraseToLeftOfComma(1), true, false);
}

discrete% UnigramSecondLeftPhraseFeature(Comma c) <- {
  sense Comma.getNotation(c.getPhraseToLeftOfComma(2), true, false);
}

discrete% UnigramRightPhraseFeature(Comma c) <- {
    sense Comma.getNotation(c.getPhraseToRightOfComma(1), true, false);
}

discrete% UnigramSecondRightPhraseFeature(Comma c) <- {
  sense Comma.getNotation(c.getPhraseToRightOfComma(2), true, false);
}

discrete% CommaParentFeature(Comma c) <- {
    sense Comma.getNotation(c.getPhraseToLeftOfParent(0), true, false);
}

discrete% UnigramParentLeftPhraseFeature(Comma c) <- {
    sense Comma.getNotation(c.getPhraseToLeftOfParent(1), true, false);
}

discrete% UnigramParentSecondLeftPhraseFeature(Comma c) <- {
  sense Comma.getNotation(c.getPhraseToLeftOfParent(2), true, false);
}

discrete% UnigramParentRightPhraseFeature(Comma c) <- {
    sense Comma.getNotation(c.getPhraseToRightOfParent(1), true, false);
}

discrete% UnigramParentSecondRightPhraseFeature(Comma c) <- {
  sense Comma.getNotation(c.getPhraseToRightOfParent(2), true, false);
}



discrete% SRLFeature(Comma c) <- {
    List SRLs = c.getContainingSRLs();
    for (int i = 0; i < SRLs.size(); i++) {
        String s = (String) SRLs.get(i);
        sense s;
    }
}



discrete% ParseParentFeatures(Comma c) <- CommaParentFeature, UnigramParentLeftPhraseFeature, UnigramParentSecondLeftPhraseFeature, UnigramParentRightPhraseFeature, UnigramParentSecondRightPhraseFeature

discrete% ParseFeatures(Comma c) <- UnigramSecondLeftPhraseFeature, UnigramSecondRightPhraseFeature, UnigramLeftPhraseFeature, UnigramRightPhraseFeature

discrete% POSFeatures(Comma c) <- UnigramSecondLeftPOSFeature, UnigramSecondRightPOSFeature, UnigramLeftPOSFeature, UnigramRightPOSFeature

discrete CommaLabel(Comma c) <- { return c.getRole(); }

/** A learned text classifier; its definition comes from data. */
discrete CommaClassifier(Comma c) <-
learn CommaLabel
  using ParseFeatures, ParseParentFeatures, POSFeatures

  from new CommaReader("data/comma_resolution_data.txt")
  100 rounds
  cval 5 "random"

  with SparseNetworkLearner {
    SparseAveragedPerceptron.Parameters p = new SparseAveragedPerceptron.Parameters();
    p.learningRate = .1;
    p.thickness = 3;
    baseLTU = new SparseAveragedPerceptron(p);
  }

  testingMetric new PrintMetrics(5)

  progressOutput 0
end
